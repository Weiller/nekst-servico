version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test

    steps:
      - checkout

      - run:
          name: Test
          command: |
            gradle test jacocoTestReport --info

      - run:
          name: Build
          command: |
            gradle build --info

      - run:
          name: Install Sonar Client
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip
            unzip sonar-scanner-cli-3.2.0.1227-linux.zip
            export SONAR_SCANNER_OPTS="-Xmx2048m"

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install Docker Client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz

            sudo mv /tmp/docker/* /usr/bin

      - run:
          name: Update Sonar
          command: |
            eval ./sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner   -Dsonar.projectKey=Weiller_nekst-servico \
                                                                                 -Dsonar.organization=weiller-github \
                                                                                 -Dsonar.sources=src/main/kotlin \
                                                                                 -Dsonar.exclusions=src/main/kotlin/infra/**
                                                                                 -Dsonar.coverage.jacoco.xmlReportPaths=build/jacocoXml.xml \
                                                                                 -Dsonar.host.url=https://sonarcloud.io \
                                                                                 -Dsonar.binaries=build/classes \
                                                                                 -Dsonar.login=a8a4aa2b2a04425660ba4e0311baeacddb3eda64

      - run:
          name: Build Docker Image
          command: docker build ./ -t springbootapp